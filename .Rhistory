#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#In the following I am going to sobstitute the NAs in the weather parameters with a mean of their value for the same month, hour and day and drop all the NAs in those valus left. I will also drop the NAs in the 'dep_delay' column for now.
flights_weather <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib)) | is.na(dep_delay)))) %>%
ungroup()
#Now I am going to group the wind speed in categories, in such a way to have also a chategorical version of it
flights_weather <- flights_weather %>%
mutate(wind_speed_group = case_when(
wind_speed >= 0 & wind_speed <= 5 ~ "0 - 5",
wind_speed > 5 & wind_speed <= 15 ~ "6 - 15",
wind_speed > 15 & wind_speed <= 25 ~ "16 - 25",
wind_speed > 25 & wind_speed <= 35 ~ "26 - 35"
)) %>%
mutate(visib_group = case_when(
visib <= 2 ~ "less than 2",
visib <= 5 ~ "3 - 5",
visib <= 8 ~ "6 - 8",
visib > 8 ~ "greater than 8"
))
#write_csv(flights_weather, "cleaned_data/flights_weather.csv")
#From Assumption 2 in the file `data_exploration_part1`, I am going to create a new dataset containing only the necessary information about flights and weather interactions
tight_flights_weather <- flights_weather %>%
select(-c("dep_time", "sched_dep_time", "arr_time", "sched_arr_time", "minute", "year"))
#write_csv(tight_flights_weather, "cleaned_data/tight_flights_weather.csv")
## airlines: the column `name` seems to be confusing, I will rename it as `airline`.
airlines <- airlines %>%
rename("airline" = "name")
weather_impact <- left_join(tight_flights_weather, airlines, "carrier")
write_csv(weather_impact, "cleaned_data/weather_imp.csv")
library(tidyverse)
library(GGally)
tight_flights_weather <- read_csv(here::here("cleaned_data/tight_flights_weather.csv"))
weather_impact <- read_csv(here::here("cleaned_data/weather_imp.csv"))
library(tidyverse)
library(GGally)
weather_impact <- read_csv(here::here("cleaned_data/weather_imp.csv"))
```{r}
skimr::skim(tight_flights_weather)
tight_flights_weather %>%
filter(!is.na(arr_delay)) %>%
summarise(cor(dep_delay, arr_delay))
tight_flights_weather %>%
select(dep_delay, wind_dir, wind_speed, wind_gust, visib) %>%
ggcorr(label = TRUE)
tight_flights_weather %>%
select(wind_dir, wind_speed, wind_gust, visib, dep_delay) %>%
ggpairs(progress = FALSE)
tight_flights_weather %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
tight_flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_point()
tight_flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_point()
tight_flights_weather %>%
ggplot()+
aes(x = wind_speed_group, y = dep_delay)+
geom_boxplot()
model <- lm(dep_delay ~ wind_speed_group, tight_flights_weather)
summary(model)
tight_flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_boxplot()
summary(model_2)
model_2 <- lm(dep_delay ~ wind_speed, tight_flights_weather)
summary(model_2)
model_dir_1 <- lm(dep_delay ~ wind_speed_group, tight_flights_weather)
summary(model_dir_1)
model_dir_1 <- lm(dep_delay ~ wind_dir, tight_flights_weather)
model_dir_1 <- lm(dep_delay ~ wind_dir, tight_flights_weather)
summary(model_dir_1)
tight_flights_weather %>%
distinct(wind_dir)
tight_flights_weather %>%
distinct(wind_dir) %>%
arrange(wind_dir)
tight_flights_weather %>%
distinct(wind_dir) %>%
arrange(desc(wind_dir))
library(tidyverse)
library(GGally)
flights_weather <- read_csv(here::here("cleaned_data/tight_flights_weather.csv"))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#In the following I am going to sobstitute the NAs in the weather parameters with a mean of their value for the same month, hour and day and drop all the NAs in those valus left. I will also drop the NAs in the 'dep_delay' column for now.
flights_weather <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib)) | is.na(dep_delay)))) %>%
ungroup()
#Now I am going to group the wind speed in categories, in such a way to have also a chategorical version of it
flights_weather <- flights_weather %>%
mutate(wind_speed_group = case_when(
wind_speed >= 0 & wind_speed <= 5 ~ "0 - 5",
wind_speed > 5 & wind_speed <= 15 ~ "6 - 15",
wind_speed > 15 & wind_speed <= 25 ~ "16 - 25",
wind_speed > 25 & wind_speed <= 35 ~ "26 - 35"
)) %>%
mutate(visib_group = case_when(
visib <= 2 ~ "less than 2",
visib <= 5 ~ "3 - 5",
visib <= 8 ~ "6 - 8",
visib > 8 ~ "greater than 8"
)) %>%
mutate(wind_dir_group = case_when(
wind_dir <= 100 ~ "less than 100",
wind_dir <= 200 ~ "100 - 200",
wind_dir <= 300 ~ "200 - 300",
wind_dir > 300 ~ "greater than 300"
))
flights_weather <- flights_weather %>%
select(-c("dep_time", "sched_dep_time", "arr_time", "sched_arr_time", "minute", "year"))
write_csv(flights_weather, "cleaned_data/flights_weather.csv")
tight_flights_weather <- read_csv(here::here("cleaned_data/tight_flights_weather.csv"))
flights_weather <- read_csv(here::here("cleaned_data/flights_weather.csv"))
skimr::skim(flights_weather)
flights_weather %>%
filter(!is.na(arr_delay)) %>%
summarise(cor(dep_delay, arr_delay))
flights_weather %>%
select(dep_delay, wind_dir, wind_speed, wind_gust, visib) %>%
ggcorr(label = TRUE)
flights_weather %>%
select(wind_dir, wind_speed, wind_gust, visib, dep_delay) %>%
ggpairs(progress = FALSE)
tight_flights_weather %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
flights_weather %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
flights_weather %>%
ggplot()+
aes(x = wind_speed_group, y = dep_delay)+
geom_boxplot()
model_speed_1 <- lm(dep_delay ~ wind_speed_group, tight_flights_weather)
summary(model_speed_1)
model_speed_2 <- lm(dep_delay ~ wind_speed, tight_flights_weather)
summary(model_speed_2)
model_speed_2 <- lm(dep_delay ~ wind_speed, flights_weather)
summary(model_speed_2)
model_speed_1 <- lm(dep_delay ~ wind_speed_group, flights_weather)
summary(model_speed_1)
flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_point()
model_dir_1 <- lm(dep_delay ~ wind_dir, flights_weather)
summary(model_dir_1)
flights_weather %>%
ggplot()+
aes(x = wind_dir_group, y = dep_delay)+
geom_boxplot()
model_dir_2 <- lm(dep_delay ~ wind_dir_group, flights_weather)
summary(model_dir_2)
model_speed_1 <- lm(dep_delay ~ wind_speed, flights_weather)
summary(model_speed_1)
model_speed_2 <- lm(dep_delay ~ wind_speed_group, flights_weather)
summary(model_speed_2)
flights_weather %>%
ggplot()+
aes(x = visib, y = dep_delay)+
geom_point()
summary(model_visib_1)
model_visib_1 <- lm(dep_delay ~ visib, flights_weather)
summary(model_visib_1)
flights_weather %>%
ggplot()+
aes(x = wind_visib_group, y = dep_delay)+
geom_boxplot()
flights_weather %>%
ggplot()+
aes(x = visib_group, y = dep_delay)+
geom_boxplot()
model_visib_2 <- lm(dep_delay ~ visib_group, flights_weather)
model_visib_2 <- lm(dep_delay ~ visib_group, flights_weather)
summary(model_visib_2)
flights_weather %>%
mutate(wind_speed_group = case_when(
wind_speed >= 0 & wind_speed <= 25 ~ "0 - 25",
wind_speed > 25 & wind_speed <= 35 ~ "over 26"
)) %>%
mutate(visib_group = case_when(
visib <= 5 ~ "less than 5",
visib > 5 ~ "greater than 5"
)) %>%
mutate(wind_dir_group = case_when(
wind_dir <= 200 ~ "less than 200",
wind_dir > 200 ~ "greater than 200"
))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#In the following I am going to sobstitute the NAs in the weather parameters with a mean of their value for the same month, hour and day and drop all the NAs in those valus left. I will also drop the NAs in the 'dep_delay' column for now.
flights_weather <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib)) | is.na(dep_delay)))) %>%
ungroup()
#Now I am going to group the wind speed in categories, in such a way to have also a chategorical version of it
flights_weather <- flights_weather %>%
mutate(wind_speed_group = case_when(
wind_speed >= 0 & wind_speed <= 5 ~ "0 - 5",
wind_speed > 5 & wind_speed <= 15 ~ "6 - 15",
wind_speed > 15 & wind_speed <= 25 ~ "16 - 25",
wind_speed > 25 & wind_speed <= 35 ~ "26 - 35"
)) %>%
mutate(visib_group = case_when(
visib <= 2 ~ "less than 2",
visib <= 5 ~ "3 - 5",
visib <= 8 ~ "6 - 8",
visib > 8 ~ "greater than 8"
)) %>%
mutate(wind_dir_group = case_when(
wind_dir <= 100 ~ "less than 100",
wind_dir <= 200 ~ "100 - 200",
wind_dir <= 300 ~ "200 - 300",
wind_dir > 300 ~ "greater than 300"
))
flights_weather <- flights_weather %>%
select(-c("dep_time", "sched_dep_time", "arr_time", "sched_arr_time", "minute", "year"))
write_csv(flights_weather, "cleaned_data/flights_weather.csv")
#From Assumption 2 in the file `data_exploration_part1`, I am going to create a new dataset containing only the necessary information about flights and weather interactions
tight_flights_weather <- flights_weather %>%
mutate(wind_speed_group = case_when(
wind_speed >= 0 & wind_speed <= 25 ~ "0 - 25",
wind_speed > 25 & wind_speed <= 35 ~ "over 26"
)) %>%
mutate(visib_group = case_when(
visib <= 5 ~ "less than 5",
visib > 5 ~ "greater than 5"
)) %>%
mutate(wind_dir_group = case_when(
wind_dir <= 200 ~ "less than 200",
wind_dir > 200 ~ "greater than 200"
))
#tight_flights_weather <- tight_flights_weather %>%
#  select(-c("dep_time", "sched_dep_time", "arr_time", "sched_arr_time", "minute", "year"))
write_csv(tight_flights_weather, "cleaned_data/tight_flights_weather.csv")
## airlines: the column `name` seems to be confusing, I will rename it as `airline`.
airlines <- airlines %>%
rename("airline" = "name")
weather_impact <- left_join(tight_flights_weather, airlines, "carrier")
write_csv(weather_impact, "cleaned_data/weather_imp.csv")
tight_flights_weather <- read_csv(here::here("cleaned_data/tight_flights_weather.csv"))
model_speed_2 <- lm(dep_delay ~ wind_speed_group, tight_flights_weather)
summary(model_speed_2)
model_dir_2 <- lm(dep_delay ~ wind_dir_group, tight_flights_weather)
model_dir_2 <- lm(dep_delay ~ wind_dir_group, tight_flights_weather)
summary(model_dir_2)
model_visib_1 <- lm(dep_delay ~ visib, tight_flights_weather)
summary(model_visib_1)
flights_weather %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()+
geom_line()
flights_weather %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
tight_flights_weather <- read_csv(here::here("cleaned_data/tight_flights_weather.csv"))
model_speed_3 <- lm(dep_delay ~ wind_speed_group, tight_flights_weather)
summary(model_speed_3)
model_dir_3 <- lm(dep_delay ~ wind_dir_group, tight_flights_weather)
summary(model_dir_3)
tight_flights_weather %>%
ggplot()+
aes(x = visib_group, y = dep_delay)+
geom_boxplot()
tight_flights_weather %>%
ggplot()+
aes(x = wind_dir_group, y = dep_delay)+
geom_boxplot()
tight_flights_weather %>%
ggplot()+
aes(x = wind_speed_group, y = dep_delay)+
geom_boxplot()
tight_flights_weather %>%
group_by(month, wind_speed_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = wind_speed_group)+
geom_col(position = "dodge")+
#geom_line() +
#geom_vline(xintercept = 0) +
#geom_hline(yintercept = 0) +
theme_light()+
labs(
x = "\n months",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions\n"
)+
scale_x_continuous(n.breaks = 12)
```{r}
tight_flights_weather %>%
group_by(month, wind_speed_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, colour = wind_speed_group)+
#geom_col(position = "dodge")+
geom_line()+
geom_point()
tight_flights_weather %>%
group_by(month, visib_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = visib_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n months",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions\n"
)+
scale_x_continuous(n.breaks = 12)
tight_flights_weather %>%
group_by(month, wind_dir_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = wind_dir_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n months",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions\n"
)+
scale_x_continuous(n.breaks = 12)
model_tot <- lm(dep_delay ~ wind_speed_group + visib_group + wind_dir_group, tight_flights_weather)
summary(model_tot)
model_tot_2 <- lm(dep_delay ~ wind_speed_group + visib_group, tight_flights_weather)
model_tot_2 <- lm(dep_delay ~ wind_speed_group + visib_group, tight_flights_weather)
summary(model_tot_2)
library(tidyverse)
library(GGally)
weather_impact <- read_csv(here::here("cleaned_data/weather_imp.csv"))
weather_impact %>%
group_by(airline) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = airline, y = mean_dep_delay)+
geom_col(position = "dodge", fill = "mediumorchid1")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different airlines\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(airline, wind_speed_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = airline, y = mean_dep_delay, fill = wind_speed_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions and airlines\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(airline, visib_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = airline, y = mean_dep_delay, fill = visib_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different visibility conditions and airline\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(origin) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = origin, y = mean_dep_delay)+
geom_col(position = "dodge", fill = "lightsalmon")+
theme_light()+
labs(
x = "\n Departure Airports",
y = "Departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different departure airports\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(origin, wind_speed_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = origin, y = mean_dep_delay, fill = wind_speed_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions and airports\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(origin, airline, wind_speed_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = origin, y = mean_dep_delay, fill = wind_speed_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different wind speed conditions and airports\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))+
facet_wrap(~airline)
weather_impact %>%
group_by(origin, visib_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = origin, y = mean_dep_delay, fill = visib_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different visibility conditions and airports\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))
weather_impact %>%
group_by(origin, airline, visib_group) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = origin, y = mean_dep_delay, fill = visib_group)+
geom_col(position = "dodge")+
theme_light()+
labs(
x = "\n Airlines",
y = "departure delays mean (in mins)\n",
title = "\nDeparture delays depending on different visibility conditions, airports and airlines\n"
)+
scale_x_discrete(guide = guide_axis(angle = 45))+
facet_wrap(~airline)

join_3 <- inner_join(flights, weather, "time_hour")
join_3 <- inner_join(flights, weather, c("time_hour", "origin"))
join_3
join_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
join_3 %>%
filter((month_flight == month_recording) & (day_flight == day_recording) & (hour_flight == hour_recording))
join_3 %>%
filter((month_x == month_y) & (day_x == day_y) & (hour_x == hour_y))
join_3 %>%
filter((month.x == month.y) & (day.x == day.y) & (hour.x == hour.y))
library(tidyverse)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
weather
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
join_1 <- inner_join(flights, weather, c("time_hour", "origin"))
join_1
join_1 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
library(lubridate)
join_1 %>%
mutate(time_hour = ymd_h(time_hour))
join_1 %>%
mutate(time_hour = ymd_hms(time_hour))
join_1 %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
join_1 <- inner_join(flights, weather, by = c("time_hour", "origin"))
join_1
join_1 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
flights_weather
flights_weather
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour), .before = minute
)
flights_weather
weather
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
weather
flights_weather %>%
filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
flights_weather <- flights_weather %>%
filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
```{r}
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
flights_weather <- flights_weather %>%
filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#I also decide not to consider those rows for which all the weather informations are NAs since doesn't help me in the analysis.
flights_weather <- flights_weather %>%
filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
write_csv(flights_weather, "cleaned_data/flights_weather.csv")
flights_weather <- read_csv("cleaned_data/flights_weather.csv")
library(tidyverse)
library(tidyverse)
flights_weather <- read_csv("cleaned_data/flights_weather.csv")
flights_weather
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_line()
flights_weather %>%
ggplot()+
aes(x = wind_dir, y = scale(dep_delay))+
geom_line()
flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_line()
flights_weather %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_point()
prova <- flights_weather %>%
filter(!is.na(wind_speed))
prova %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova
prova <- flights_weather %>%
filter(!(is.na(wind_speed) & is.na(wind_dir) & is.na(visib)))
prova %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova <- flights_weather %>%
filter(!(is.na(wind_speed) & is.na(wind_dir) & is.na(visib)))
prova %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova <- flights_weather %>%
filter(!((is.na(wind_speed)) & (is.na(wind_dir)) & (is.na(visib))))
prova %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova <- flights_weather %>%
filter(!((is.na(wind_speed)) | (is.na(wind_dir)) | (is.na(visib))))
prova %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(wind_speed = coalesce(wind_speed, mean(wind_speed, na.rm = TRUE)))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(wind_speed = coalesce(wind_speed, mean(wind_speed, na.rm = TRUE))) %>%
summarise(speed_na = sum(is.na(wind_speed)))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(wind_speed = coalesce(wind_speed, mean(wind_speed, na.rm = TRUE))) %>%
summarise(speed_na = sum(is.na(wind_speed))) %>%
arrange(desc(spped_na))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(wind_speed = coalesce(wind_speed, mean(wind_speed, na.rm = TRUE))) %>%
summarise(speed_na = sum(is.na(wind_speed))) %>%
arrange(desc(speed_na))
prova_2 <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(wind_speed = coalesce(wind_speed, mean(wind_speed, na.rm = TRUE))) %>%
summarise(speed_na = sum(is.na(wind_speed))) %>%
arrange(desc(speed_na))
?summarise
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE))))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
summarise(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~sum(is.na(.x))))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
summarise(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~sum(is.na(.x)))) %>%
filter((wind_speed != 0) | (wind_dir != 0) | (wind_gust != 0) | (visib != 0))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
#summarise(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~sum(is.na(.x)))) %>%
filter(!((wind_speed != 0) | (wind_dir != 0) | (wind_gust != 0) | (visib != 0)))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
#summarise(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~sum(is.na(.x)))) %>%
filter(((wind_speed != 0) | (wind_dir != 0) | (wind_gust != 0) | (visib != 0)))
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
summarise(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~sum(is.na(.x)))) %>%
filter(((wind_speed != 0) | (wind_dir != 0) | (wind_gust != 0) | (visib != 0)))
filter(!((is.na(wind_speed)) | ((is.na(wind_dir)) | ((is.na(wind_gust)) | (is.na(visib != 0)))
flights_weather %>%
filter(!((is.na(wind_speed)) | ((is.na(wind_dir)) | ((is.na(wind_gust)) | (is.na(visib != 0))))
flights_weather %>%
flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib != 0)))))
prova_3 <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib != 0)))))
peova_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova_3 <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib != 0)))))
peova_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
peova_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
prova_3 %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x)))) %>%
filter(((wind_speed != 0) | (wind_dir != 0) | (wind_gust != 0) | (visib != 0)))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#I also decide not to consider those rows for which all the weather informations are NAs since doesn't help me in the analysis.
flights_weather <- flights_weather %>%
filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
flights_weather <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib != 0)))))
write_csv(flights_weather, "cleaned_data/flights_weather.csv")
library(tidyverse)
flights_weather <- read_csv("cleaned_data/flights_weather.csv")
flights_weather <- read_csv(here::here("cleaned_data/flights_weather.csv"))
flights_weather
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
library(tidyverse)
library(lubridate)
airlines <- read_csv(here::here("raw_data/airlines.csv"))
airports <- read_csv(here::here("raw_data/airports.csv"))
flights <- read_csv(here::here("raw_data/flights.csv"))
planes <- read_csv(here::here("raw_data/planes.csv"))
weather <- read_csv(here::here("raw_data/weather.csv"))
#I will generally postpone the cleaning decisions after the joins operations. However, there are a few necessary actions that rised from the `data_exploration` file that I can handle right now.
#`weather` dataset
# From`Assumption 1` of the `data_exploration` file, I decided to delete from the `weather` dataset the columns `temp`, `dewp`,`pressure`,`precip` and `humid`, since the non NAs values here are only the 2% of the entire dataset, which make them not statistically significant.
#I am going to delete also the 'year' column, since all the data refers to the same year, i.e. 2017.
#The first think I need to do is joining the`flights` dataset with the one containing information about the `weather`. Before doing that we notice that in the two datasets appears columns with the same name, e.g. 'year', 'month', 'day' etc..., wich apparently refer to different things, actually I want that the coincide since I am interested in comparing weather and flights times, but I have this information also in the `time_hour` column which is used for the join, so I think that the best choice should be that of deleting them from both the datasets before joining.
weather <- weather %>%
select(-c("temp", "dewp", "pressure", "precip", "humid", "year", "month", "day", "hour"))
flights <- flights %>%
select(-c("month", "day", "hour", "year"))
flights_weather <- inner_join(flights, weather, by = c("time_hour", "origin"))
#Finally I am going to create separate columns for `year`, `month`, `day` and `hour`.
flights_weather <- flights_weather %>%
mutate(
year = year(time_hour),
month = month(time_hour),
day = day(time_hour),
hour = hour(time_hour)
)
#I also decide not to consider those rows for which all the weather informations are NAs since doesn't help me in the analysis.
#flights_weather <- flights_weather %>%
#  filter(!((is.na(wind_dir)) & (is.na(wind_speed)) & (is.na(wind_gust)) & (is.na(visib))))
#In the following I am going to sobstitute the NAs in the weather parameters with a mean of theyr value for the same month, hour and day.
flights_weather <- flights_weather %>%
group_by(month, day, hour) %>%
mutate(across(.col = c("wind_speed", "wind_gust", "wind_dir", "visib"), .fns = ~coalesce(.x, mean(.x, na.rm = TRUE)))) %>%
filter(!((is.na(wind_speed) | (is.na(wind_dir)) | (is.na(wind_gust)) | (is.na(visib)) | is.na(dep_delay))))
write_csv(flights_weather, "cleaned_data/flights_weather.csv")
library(tidyverse)
flights_weather <- read_csv(here::here("cleaned_data/flights_weather.csv"))
flights_weather
flights_weather %>%
summarise(across(.col = everything(), .fns = ~sum(is.na(.x))))
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = hour, y = dep_delay)+
geom_line()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = time_hour, y = dep_delay)+
geom_line()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_col()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_dir, y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_gust, y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = mont, y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = m(month), y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month, y = dep_delay)+
geom_boxplot()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = m(month), y = dep_delay)+
geom_line()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = dep_delay)+
geom_line()
flights_weather %>%
#filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = dep_delay)+
geom_line()
flights_weather %>%
#filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = dep_delay, group = day)+
geom_line()
flights_weather %>%
#filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = dep_delay, group = wind_speed)+
geom_line()
flights_weather %>%
#filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = dep_delay)+
geom_col()
flights_weather %>%
#filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = month(month), y = mean(dep_delay))+
geom_col()
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay)+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = wind_speed)+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay)+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay)+
geom_point()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay)+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
ggplot()+
aes(x = time_hour, y = dep_delay)+
geom_point()
flights_weather %>%
distinct(dep_delay) %>%
arrange(desc(dep_delay))
```{r}
flights_weather %>%
filter(month == "10" & day == "12")
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = time_hour, y = dep_delay)+
geom_point()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = wind_speed, y = dep_delay)+
geom_point()
flights_weather %>%
filter(month == "10" & day == "12") %>%
ggplot()+
aes(x = as.numeric(wind_speed), y = dep_delay)+
geom_point()
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = wind_speed)+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = as.factor(wind_speed))+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather
flights_weather %>%
group_by(month) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = as.factor(wind_speed))+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
flights_weather %>%
group_by(month, wind_speed) %>%
summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE)) %>%
ggplot()+
aes(x = month, y = mean_dep_delay, fill = as.factor(wind_speed))+
geom_col()+
#geom_line() +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)
